a:17:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"ZFS Workload Testing";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:378:"This portion of the documentation will be concerned with the test environment created in the previous section. We'll review some simple scripts that have been created to put a ZFS storage pool under a fairly typical read/write workload so that system resource statistics can be measured and analyzed. The synthetic benchmarking environment is available as a Docker container on ";}i:2;i:33;}i:5;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:45:"https://hub.docker.com/r/jcherven/zfsproject/";i:1;s:10:"Docker Hub";}i:2;i:411;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:". The workload scripts are available on ";}i:2;i:471;}i:7;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:38:"https://github.com/jcherven/zfsproject";i:1;s:6:"Github";}i:2;i:511;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:560;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:561;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:561;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:283:"The Docker image used in this lab requires an Ubuntu 16.04 host with ZFS installed on it. ZFS running in the container requires privileged access to mounts in /proc as well as direct access to block storage on the host. For information on setting this environment up, please see the ";}i:2;i:563;}i:12;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:14:"labenvironment";i:1;s:15:"Lab Environment";}i:2;i:846;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" section.";}i:2;i:880;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:889;}i:15;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:891;}i:16;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:891;}}